# Generated by Django 4.2.7 on 2025-09-29 10:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("retailers", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("districts", "0001_initial"),
        ("pricing", "0001_initial"),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name="publishedprice",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="publishedprice",
            name="admin_approval_required",
            field=models.BooleanField(
                default=False, help_text="Whether admin approval is required"
            ),
        ),
        migrations.AddField(
            model_name="publishedprice",
            name="admin_notes",
            field=models.TextField(
                blank=True, help_text="Admin notes about this price"
            ),
        ),
        migrations.AddField(
            model_name="publishedprice",
            name="is_auto_approved",
            field=models.BooleanField(
                default=False, help_text="Whether this price was auto-approved"
            ),
        ),
        migrations.AddField(
            model_name="publishedprice",
            name="markup_percentage",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Markup percentage over reference price",
                max_digits=5,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="publishedprice",
            name="violation_severity",
            field=models.CharField(
                choices=[
                    ("none", "No Violation"),
                    ("minor", "Minor Deviation (1-3%)"),
                    ("moderate", "Moderate Deviation (3-5%)"),
                    ("major", "Major Deviation (5-10%)"),
                    ("severe", "Severe Violation (>10%)"),
                ],
                default="none",
                help_text="Severity of price violation",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="priceaudit",
            name="district",
            field=models.ForeignKey(
                blank=True,
                help_text="District",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="price_audits",
                to="districts.district",
            ),
        ),
        migrations.AlterField(
            model_name="priceaudit",
            name="event_type",
            field=models.CharField(
                choices=[
                    ("price_created", "Price Created"),
                    ("price_updated", "Price Updated"),
                    ("price_deleted", "Price Deleted"),
                    ("validation_success", "Validation Success"),
                    ("validation_failure", "Validation Failure"),
                    ("compliance_check", "Compliance Check"),
                ],
                help_text="Type of audit event",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="priceaudit",
            name="old_price",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Previous price",
                max_digits=10,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="priceaudit",
            name="reason",
            field=models.TextField(blank=True, help_text="Reason for the event"),
        ),
        migrations.AlterField(
            model_name="priceaudit",
            name="retailer",
            field=models.ForeignKey(
                blank=True,
                help_text="Retailer",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="price_audits",
                to="retailers.retailer",
            ),
        ),
        migrations.AlterField(
            model_name="priceaudit",
            name="user",
            field=models.ForeignKey(
                blank=True,
                help_text="User who triggered the event",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="price_audits",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="publishedprice",
            name="compliant",
            field=models.BooleanField(
                default=False,
                help_text="Whether this price is compliant with reference price",
            ),
        ),
        migrations.AlterField(
            model_name="publishedprice",
            name="is_active",
            field=models.BooleanField(
                default=True, help_text="Whether this price is active"
            ),
        ),
        migrations.AlterField(
            model_name="publishedprice",
            name="validation_reason",
            field=models.TextField(
                blank=True, help_text="Reason for compliance status"
            ),
        ),
        migrations.AlterField(
            model_name="referenceprice",
            name="created_by",
            field=models.ForeignKey(
                help_text="User who created this price",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="created_reference_prices",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="referenceprice",
            name="district",
            field=models.ForeignKey(
                blank=True,
                help_text="District (null for global prices)",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reference_prices",
                to="districts.district",
            ),
        ),
        migrations.AlterField(
            model_name="referenceprice",
            name="is_active",
            field=models.BooleanField(
                default=True, help_text="Whether this price is active"
            ),
        ),
        migrations.AlterModelTable(
            name="priceaudit",
            table="pricing_priceaudit",
        ),
        migrations.AlterModelTable(
            name="publishedprice",
            table="pricing_publishedprice",
        ),
        migrations.AlterModelTable(
            name="referenceprice",
            table="pricing_referenceprice",
        ),
        migrations.CreateModel(
            name="PriceAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("markup_violation", "Markup Violation"),
                            ("price_change", "Price Change"),
                            ("reference_price_update", "Reference Price Update"),
                            ("compliance_breach", "Compliance Breach"),
                        ],
                        help_text="Type of alert",
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        help_text="Alert severity level",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(help_text="Alert title", max_length=200)),
                ("message", models.TextField(help_text="Detailed alert message")),
                (
                    "markup_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Markup percentage that triggered the alert",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "reference_price_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Reference price amount",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "retailer_price_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Retailer price amount",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "is_resolved",
                    models.BooleanField(
                        default=False, help_text="Whether the alert has been resolved"
                    ),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, help_text="When the alert was resolved", null=True
                    ),
                ),
                (
                    "resolution_notes",
                    models.TextField(
                        blank=True, help_text="Notes about how the alert was resolved"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "published_price",
                    models.ForeignKey(
                        blank=True,
                        help_text="Published price that triggered the alert",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="pricing.publishedprice",
                    ),
                ),
                (
                    "reference_price",
                    models.ForeignKey(
                        blank=True,
                        help_text="Reference price involved",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="pricing.referenceprice",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who resolved the alert",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "retailer",
                    models.ForeignKey(
                        help_text="Retailer involved in the alert",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_alerts",
                        to="retailers.retailer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Price Alert",
                "verbose_name_plural": "Price Alerts",
                "db_table": "pricing_pricealert",
                "ordering": ["-created_at"],
            },
        ),
    ]
