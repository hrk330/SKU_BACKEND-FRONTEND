# Generated by Django 4.2.7 on 2025-09-29 07:24

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("districts", "0001_initial"),
        ("retailers", "0001_initial"),
        ("catalog", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PriceAudit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("reference_created", "Reference Price Created"),
                            ("reference_updated", "Reference Price Updated"),
                            ("reference_deleted", "Reference Price Deleted"),
                            ("published_created", "Published Price Created"),
                            ("published_updated", "Published Price Updated"),
                            ("published_deleted", "Published Price Deleted"),
                            ("validation_success", "Price Validation Success"),
                            ("validation_failure", "Price Validation Failure"),
                            ("compliance_check", "Compliance Check"),
                        ],
                        help_text="Type of audit event",
                        max_length=20,
                    ),
                ),
                (
                    "old_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Previous price (for updates)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "new_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="New price",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "reference_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Reference price at time of event",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "markup_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Markup percentage",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "compliant",
                    models.BooleanField(
                        blank=True, help_text="Compliance status", null=True
                    ),
                ),
                (
                    "reason",
                    models.TextField(help_text="Reason or description of the event"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "district",
                    models.ForeignKey(
                        blank=True,
                        help_text="District (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_audits",
                        to="districts.district",
                    ),
                ),
                (
                    "retailer",
                    models.ForeignKey(
                        blank=True,
                        help_text="Retailer (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_audits",
                        to="retailers.retailer",
                    ),
                ),
                (
                    "sku",
                    models.ForeignKey(
                        help_text="Product SKU",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_audits",
                        to="catalog.sku",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who triggered the event",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="price_audits",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Price Audit",
                "verbose_name_plural": "Price Audits",
                "db_table": "pricing_price_audit",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReferencePrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Reference price",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "effective_from",
                    models.DateTimeField(help_text="When this price becomes effective"),
                ),
                (
                    "effective_until",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this price expires (null for indefinite)",
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this reference price is active"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this reference price",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_reference_prices",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "district",
                    models.ForeignKey(
                        blank=True,
                        help_text="District (null for global price)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reference_prices",
                        to="districts.district",
                    ),
                ),
                (
                    "sku",
                    models.ForeignKey(
                        help_text="Product SKU",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reference_prices",
                        to="catalog.sku",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reference Price",
                "verbose_name_plural": "Reference Prices",
                "db_table": "pricing_reference_price",
                "ordering": ["-effective_from"],
                "unique_together": {("sku", "district", "effective_from")},
            },
        ),
        migrations.CreateModel(
            name="PublishedPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Published price",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "effective_from",
                    models.DateTimeField(help_text="When this price becomes effective"),
                ),
                (
                    "effective_until",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this price expires (null for indefinite)",
                        null=True,
                    ),
                ),
                (
                    "compliant",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this price is compliant with regulations",
                    ),
                ),
                (
                    "validation_reason",
                    models.TextField(
                        blank=True, help_text="Reason for compliance/non-compliance"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this published price is active"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "retailer",
                    models.ForeignKey(
                        help_text="Retailer who published this price",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="published_prices",
                        to="retailers.retailer",
                    ),
                ),
                (
                    "sku",
                    models.ForeignKey(
                        help_text="Product SKU",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="published_prices",
                        to="catalog.sku",
                    ),
                ),
            ],
            options={
                "verbose_name": "Published Price",
                "verbose_name_plural": "Published Prices",
                "db_table": "pricing_published_price",
                "ordering": ["-effective_from"],
                "unique_together": {("sku", "retailer", "effective_from")},
            },
        ),
    ]
