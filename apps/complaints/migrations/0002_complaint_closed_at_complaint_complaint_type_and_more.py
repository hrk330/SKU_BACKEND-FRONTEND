# Generated by Django 4.2.7 on 2025-09-30 05:21

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("retailers", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("complaints", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="complaint",
            name="closed_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="complaint",
            name="complaint_type",
            field=models.CharField(
                choices=[
                    ("price_violation", "Price Violation"),
                    ("service_issue", "Service Issue"),
                    ("product_quality", "Product Quality"),
                    ("other", "Other"),
                ],
                default="price_violation",
                help_text="Type of complaint",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="complaint",
            name="contact_number",
            field=models.CharField(
                blank=True, help_text="Contact number for follow-up", max_length=17
            ),
        ),
        migrations.AddField(
            model_name="complaint",
            name="incident_date",
            field=models.DateTimeField(
                blank=True, help_text="Date and time when incident occurred", null=True
            ),
        ),
        migrations.AddField(
            model_name="complaint",
            name="incident_location",
            field=models.TextField(
                blank=True, help_text="Specific location where incident occurred"
            ),
        ),
        migrations.AddField(
            model_name="complaint",
            name="investigation_notes",
            field=models.TextField(blank=True, help_text="Notes from investigation"),
        ),
        migrations.AddField(
            model_name="complaint",
            name="price_difference",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Difference between reported and reference price",
                max_digits=10,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="complaint",
            name="price_difference_percentage",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Percentage difference in price",
                max_digits=5,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="complaint",
            name="reference_price",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Government reference price at time of complaint",
                max_digits=10,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0.01"))],
            ),
        ),
        migrations.AddField(
            model_name="complaint",
            name="reported_price",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Price charged by retailer",
                max_digits=10,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0.01"))],
            ),
        ),
        migrations.AddField(
            model_name="complaint",
            name="reported_retailer",
            field=models.ForeignKey(
                blank=True,
                help_text="Retailer against whom complaint is filed",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="complaints_against",
                to="retailers.retailer",
            ),
        ),
        migrations.AddField(
            model_name="complaint",
            name="resolution_action",
            field=models.TextField(
                blank=True, help_text="Action taken to resolve the complaint"
            ),
        ),
        migrations.AddField(
            model_name="complaint",
            name="resolution_report",
            field=models.TextField(
                blank=True, help_text="Final resolution report sent to complainant"
            ),
        ),
        migrations.AddField(
            model_name="complaint",
            name="witness_details",
            field=models.TextField(blank=True, help_text="Details of any witnesses"),
        ),
        migrations.AlterField(
            model_name="complaint",
            name="resolution_notes",
            field=models.TextField(blank=True, help_text="Internal resolution notes"),
        ),
        migrations.AlterField(
            model_name="complaint",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending Review"),
                    ("under_review", "Under Review"),
                    ("investigation", "Under Investigation"),
                    ("waiting_response", "Waiting for Response"),
                    ("resolved", "Resolved"),
                    ("rejected", "Rejected"),
                    ("closed", "Closed"),
                ],
                default="pending",
                help_text="Complaint status",
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="ComplaintStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("pending", "Pending Review"),
                            ("under_review", "Under Review"),
                            ("investigation", "Under Investigation"),
                            ("waiting_response", "Waiting for Response"),
                            ("resolved", "Resolved"),
                            ("rejected", "Rejected"),
                            ("closed", "Closed"),
                        ],
                        help_text="Previous status",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "new_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("under_review", "Under Review"),
                            ("investigation", "Under Investigation"),
                            ("waiting_response", "Waiting for Response"),
                            ("resolved", "Resolved"),
                            ("rejected", "Rejected"),
                            ("closed", "Closed"),
                        ],
                        help_text="New status",
                        max_length=20,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Notes about the status change"
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        help_text="User who changed the status",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_changes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "complaint",
                    models.ForeignKey(
                        help_text="Related complaint",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="complaints.complaint",
                    ),
                ),
            ],
            options={
                "verbose_name": "Complaint Status History",
                "verbose_name_plural": "Complaint Status Histories",
                "db_table": "complaints_status_history",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ComplaintNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("status_change", "Status Change"),
                            ("assignment", "Assignment"),
                            ("resolution", "Resolution"),
                            ("evidence_request", "Evidence Request"),
                            ("follow_up", "Follow Up"),
                        ],
                        help_text="Type of notification",
                        max_length=20,
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="Notification title", max_length=200),
                ),
                ("message", models.TextField(help_text="Notification message")),
                (
                    "sent_via_email",
                    models.BooleanField(
                        default=False,
                        help_text="Whether notification was sent via email",
                    ),
                ),
                (
                    "sent_via_sms",
                    models.BooleanField(
                        default=False, help_text="Whether notification was sent via SMS"
                    ),
                ),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                (
                    "complaint",
                    models.ForeignKey(
                        help_text="Related complaint",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="complaints.complaint",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        help_text="User who receives the notification",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="complaint_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Complaint Notification",
                "verbose_name_plural": "Complaint Notifications",
                "db_table": "complaints_notification",
                "ordering": ["-sent_at"],
            },
        ),
        migrations.CreateModel(
            name="ComplaintEvidence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="Evidence file",
                        upload_to="complaints/evidence/%Y/%m/%d/",
                    ),
                ),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("image", "Image"),
                            ("document", "Document"),
                            ("receipt", "Receipt"),
                            ("invoice", "Invoice"),
                            ("other", "Other"),
                        ],
                        help_text="Type of evidence file",
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the evidence"
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "complaint",
                    models.ForeignKey(
                        help_text="Related complaint",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evidence_files",
                        to="complaints.complaint",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        help_text="User who uploaded the evidence",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="uploaded_evidence",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Complaint Evidence",
                "verbose_name_plural": "Complaint Evidence",
                "db_table": "complaints_evidence",
                "ordering": ["-uploaded_at"],
            },
        ),
    ]
